upstream gwsocket {
  server 127.0.0.1:7890;
}

server {
    listen                  443 ssl http2;
    listen                  [::]:443 ssl http2;
    server_name             {{ domain }} www.{{ domain}};
    root                    {{ ansistrano_deploy_to }}/current/public;

    # Page d'erreurs
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

    # SSL
{% if self_signed %}
    ssl_certificate /etc/letsencrypt/dev/{{ domain }}.crt;
    ssl_certificate_key /etc/letsencrypt/dev/{{ domain }}.key;
{% else %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain }}/chain.pem;
{% endif %}

    # security
    include                 nginxconfig.io/security.conf;

    # logging
    access_log              /var/log/{{ domain }}/access.log combinedt;
    error_log               /var/log/{{ domain }}/error.log warn;

    # index.php
    index                   index.php;
{% if noindex is defined and noindex %}
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
{% endif %}


    # index.php fallback
    location / {
        limit_req zone=main burst=20 delay=10;
        try_files $uri $uri/ /index.php?$query_string;
    }

{% if false %}
    # Permet d'utiliser un proxy si PHP fonctionnait avec nginx, try_files $uri @php
    location @php {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
{% endif %}

    # GoAccess report
    location ~ ^/report.html$ {
        auth_request     /index.php;
        auth_request_set $auth_status $upstream_status;
	    #add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'";
    }

    location /goaccessws {
      auth_request     /index.php;
      auth_request_set $auth_status $upstream_status;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_pass http://gwsocket;
      proxy_buffering off;
      proxy_read_timeout 7d;
    }

    # additional config
    include nginxconfig.io/general.conf;

    # handle .php
    location ~ \.php$ {
 {% if docker %}
        try_files                     $fastcgi_script_name =404;
        include                       fastcgi_params;
        fastcgi_pass                  127.0.0.1:9001;
        fastcgi_index                 index.php;
        fastcgi_buffers               8 16k;
        fastcgi_buffer_size           32k;
  {% else %}
        include nginxconfig.io/php_fastcgi.conf;
  {% endif %}
    }
}

# HTTP redirect
server {
    listen 80;
    server_name {{domain}} www.{{domain}};
    include     nginxconfig.io/letsencrypt.conf;
    if ($host = www.{{domain}}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = {{domain}}) {
         return 301 https://$host$request_uri;
    } # managed by Certbot

    return 404; # managed by Certbot
}
